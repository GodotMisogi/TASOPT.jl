
#ifndef __GEARBOX__
#define __GEARBOX__

#include <InterpIncludes.ncp>

class Gearbox extends Element {

//------------------------------------------------------------
//     ******* DOCUMENTATION *******
//------------------------------------------------------------

title = "";

description = isA() + " models a gearbox that links two shafts.";

usageNotes = isA() + 
" 

- This element models a gear box connecting two shafts.
  The assumption is that power delivered from shaft 2 is transferred to 
  shaft 1 through the gearbox; thus shaft 1 consumes power equal to or 
  less than shaft 2. 
  Shaft 1 turns slower than shaft 2 for gear ratios greater than 1. 

- The torque in the output ports is set based on the value of the input 
  variable, 'trq_in'. Because of this, any GEARBOX element must be run 
  prior to the two SHAFTS it connects. Typically the value of 'trq_in' 
  must be varied to satisfy the additional torque balance coming from the 
  additional Shaft Element. 
  
- At design the gear ratio is determined by the ratio of the RPM of the   
  two connected shafts: gearRatio = N2/N1. At off-design the relationship
  between the two RPM must be enforced by satisfying the Dependent
  'dep_Nmatch'. The Independent to satisfy this condition comes from the
  extra Nmech variable due to the additional shaft.
";

  background = "";
  


//------------------------------------------------------------
//     ******* SETUP VARIABLES ********
//------------------------------------------------------------

real eff {
   value = 1.;  IOstatus = INPUT;  units = NONE;
   description = "Gearbox efficiency; a value < 1 means that Sh_O1 has less power than Sh_O2";
}

real gearRatio {
   value = 1.;  IOstatus = OUTPUT;  units = NONE;
   description = "Gearbox ratio; a value > 1 means that Sh_02 turns faster than Sh_01";
}

real N1 {
   value = 0;  IOstatus = OUTPUT;  units = RPM;
   description = "Speed from port1";
}

real N2 {
   value = 0;  IOstatus = OUTPUT;  units = RPM;
   description = "Speed from port2";
}

real Nmatch {
   value = 0;  IOstatus = OUTPUT;  units = RPM;
   description = "N1 multiplied by gear ratio";
}
real Wgb {
   value = 0.0; IOstatus = OUTPUT; units = "N";
   description = "Weight of gearbox";
}
real trq_in {
   value = 10000.;  IOstatus = INPUT;  units = FT_LBF;
   description = "Torque in the second output port, and related to the first output port torque";
}


//------------------------------------------------------------
//   ******* OPTION VARIABLE SETUP *******
//------------------------------------------------------------
Option switchDes {
   allowedValues = { DESIGN, OFFDESIGN };
   description = "Determines if the element is in design or off-design mode";
   IOstatus = INPUT;
   rewritableValues = FALSE;
}

  
//------------------------------------------------------------
// ****** SETUP PORTS, FLOW STATIONS, SOCKETS, TABLES ********
//------------------------------------------------------------

// FLUID PORTS

// FUEL PORTS

// BLEED PORTS

// THERMAL PORTS

// MECHANICAL PORTS

ShaftOutputPort Sh_O1 {
   description = "Output to Shaft 1";
}

ShaftOutputPort Sh_O2 {
   description = "Output to Shaft 2";
}
  
// FLOW STATIONS

// SOCKETS

// TABLES


//------------------------------------------------------------
// ******* INTERNAL SOLVER SETUP *******
//------------------------------------------------------------

//------------------------------------------------------------
//  ******  ADD SOLVER INDEPENDENTS & DEPENDENTS  ******
//------------------------------------------------------------
Independent ind_trq {
   varName = "trq_in";
   description = "Independent to vary the torque in the output ports";
   autoSetup = TRUE;
}

Dependent dep_Nmatch {
   eq_lhs = "N2";
   eq_rhs = "Nmatch";
   description = "Dependent to make the ratio of the shaft RPM to match the gear ratio";
   autoSetup = FALSE;  // TRUE at off-design
}

//trq =  C_HP_PER_RPMtoFT_LBF * pwr / N;

  
   //------------------------------------------------------------
   // ******* VARIABLE CHANGED METHODOLOGY *******
   //------------------------------------------------------------
   void variableChanged( string name, any oldVal ) {

      //------------------------------------------------------------
      // determine appropriate solver setup
      //------------------------------------------------------------
      if ( name == "switchDes" ) {
         if ( switchDes == "OFFDESIGN" ) {
            dep_Nmatch.autoSetup = TRUE;
         }
         else{
            dep_Nmatch.autoSetup = FALSE;
         }
      }
   }


   //------------------------------------------------------------
   //   ******* PERFORM ENGINEERING CALCULATIONS *******
   //------------------------------------------------------------
   real beta;
   void calculate() {

      //------------------------------------------------------------
      //   retrieve the speeds from the shafts
      //------------------------------------------------------------
      N1 = Sh_O1.Nmech;
      N2 = Sh_O2.Nmech;

      if ( switchDes == "DESIGN" ) {
         gearRatio = N2/N1;
         
         // Gearbox weight per Tong and Jones NASA:
         // https://ntrs.nasa.gov/api/citations/20090042817/downloads/20090042817.pdf
         beta = (Sh_O1.pwr/N1)**0.75 * (N2/N1)**0.15;
         Wgb = -37.4262 + 116.3297*beta*getUnitsFactor("lbf", "N");
      }
      Nmatch = N1*gearRatio;

      // set the torque in the ports
      Sh_O1.trq = trq_in * eff * gearRatio;
      Sh_O2.trq = -trq_in;

   }
  
}

#endif

