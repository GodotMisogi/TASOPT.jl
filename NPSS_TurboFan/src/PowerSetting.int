#ifndef __POWERSETTINGRR__
#define __POWERSETTINGRR__

/******************************************************************************
*   Copyright 2003.  The U.S. Government, as Represented by the Administrator
*     of the National Aeronautics and Space Administration (NASA).
*   Copyright 2008, 2009, 2010.  The Ohio Aerospace Institute, on behalf of the NPSS(TM)
*     Consortium.  All rights reserved.  Includes content licensed from the 
*     U.S. Government, National Aeronautics and Space Administration under 
*     United States Copyright Registration Numbers  V3503D364 and V3482D344.
*******************************************************************************/

#include <InterpIncludes.ncp>
class PowerSetting extends Element {

    //------------------------------------------------------------
    //     ******* DOCUMENTATION *******
    //------------------------------------------------------------
    title = ""; 

    description = "";

    usageNotes = isA() + "";

    background = "";

    //------------------------------------------------------------
    //     ******* SETUP VARIABLES ********
    //------------------------------------------------------------

    real parm {
        units = "none";
        value = 0.0;
        description = "Value of parameter demanded by switchParm, used value";
    }

    real parm_in {
        units = "none";
        value = 0.0;
        description = "Value of parameter demanded by switchParm, input value";
    }

    real _T41_max {
        units = "F";
        value = 3800.0;
        description = "Maximum T41";
    }
	
	real _T3_max {
        units = "F";
        value = 1620.0;
        description = "Maximum T3";
    }
	
	real _TBrnAugMax {
        units = "F";
        value = 4000.0;
        description = "Maximum AfterBurner Temp";
    }

    real _Nc_max {
        units = "none";
        value = 100.0;
        description = "Maximum Fan Speed";
    }

    //------------------------------------------------------------
    //   ******* OPTION VARIABLE SETUP *******
    //------------------------------------------------------------
    Option switchLimitSet {
        allowedValues = { "STD" , "NONE"};
        description = "Power Parameter Selection";
        trigger = TRUE; 
		
		//The trigger attribute is set to TRUE, then anytime
		// the variable value is se the variable calls the parent component's
		//"variableChanged()" function. Usually trigger is set TRUE for Options.
    }
    
    Option switchParm {
        allowedValues = { "PLA" , "WFUEL" , "THRUST"};
        description = "Power Parameter Selection";
        trigger = TRUE;
    }

    //------------------------------------------------------------
    // ****** SETUP PORTS, FLOW STATIONS, SOCKETS, TABLES ********
    //------------------------------------------------------------

    // FLUID PORTS

    // FUEL PORTS

    // BLEED PORTS

    // THERMAL PORTS

    // MECHANICAL PORTS

    // FLOW STATIONS

    // SOCKETS

    // TABLES

    //------------------------------------------------------------
    // ******* INTERNAL SOLVER SETUP *******
    //------------------------------------------------------------

    //------------------------------------------------------------
    //  ******  ADD SOLVER INDEPENDENTS & DEPENDENTS  ******
    //------------------------------------------------------------
    Dependent dep_Power 
    { 
        eq_lhs = "Eng.Perf.Fn"; 
        eq_rhs = "parm"; 
        autoSetup = TRUE; 
        description = "Power Setting Parameter Dependent";
    }

    //Constraints
    ConstraintGroup con_Power; // Create Constraint group
	
    Dependent dep_T41 { eq_lhs = "Core.TrbH.Fl_I.Tt"; eq_rhs="_T41_max"; }
    Dependent dep_NcPct { eq_lhs = "CmpF.NcPct"; eq_rhs="_Nc_max"; }
	Dependent dep_T3 {eq_lhs = "Core.BrnPri.Fl_I.Tt"; eq_rhs = "_T3_max"; }
    //Dependent dep_TBrnAug {eq_lhs = "BrnAug.Fl_O.Tt"; eq_rhs = "_TBrnAugMax";}
    
    con_Power.addConstraint("dep_T41"  , "MAX" );
    con_Power.addConstraint("dep_NcPct"  , "MAX" );
	//con_Power.addConstraint("dep_T3", "MAX");
	
	//con_Power.addConstraint("dep_TBrnAug", "MAX" );

    dep_Power.addConstraintGroup("con_Power");

    //------------------------------------------------------------
    // ******* VARIABLE CHANGED METHODOLOGY *******
    //------------------------------------------------------------
    void variableChanged( string name, any oldVal ) {


        //-----------------------
        // switchParm
        // ----------------------
        if ( name == "switchParm" )
        {

            if ( switchParm == "PLA" )
            {
                if ( switchLimitSet == "NONE" )
                {
                    dep_Power.useConstraints = FALSE;
                }
                else
                {
                    dep_Power.useConstraints = TRUE;
                }
                
                parm.units = "none"; //ensures no units assigned to NcPct
                dep_Power.eq_lhs = "Eng.CmpF.NcPct";

            }
            else if ( switchParm == "WFUEL" )
            {
                 if ( switchLimitSet == "NONE" )
                {
                    dep_Power.useConstraints = FALSE;
                }
                else
                {
                    dep_Power.useConstraints = TRUE;
                }
                
                parm_in.units = "lbm/hr";
                dep_Power.eq_lhs = "Eng.Perf.Wfuel*3600.0";
            }
            else if ( switchParm == "THRUST" ) 
            {
                if ( switchLimitSet == "NONE" )
                {
                    dep_Power.useConstraints = FALSE;
                }
                else
                {
                    dep_Power.useConstraints = TRUE;
                }
                
                parm_in.units = "lbf";
                dep_Power.eq_lhs = "Eng.Perf.Fn";
            }
        }
        
    }

    //------------------------------------------------------------
    //   ******* PERFORM ENGINEERING CALCULATIONS *******
    //------------------------------------------------------------
    void calculate() {


        //-----------------------------
        // LIMIT SWITCH
        //-----------------------------

        //Standard limits
        if (switchLimitSet == "STD") 
        {
            _T41_max = 3500.0;
            _Nc_max  = 150.0;
			_T3_max  = 1600.0;
			//_TBrnAugMax = 4200.0;
    
        }
        // Limits off
        else
        {
        }

        //--------------------------
        // PARM SWITCH
        //--------------------------

        if ( switchParm == "PLA" )
        {
            parm = TB_SKED(parm_in);
        }
        else if ( switchParm == "WFUEL" )
        {
            parm = parm_in;
        }
        else if ( switchParm == "THRUST" )
        {
            parm = parm_in;
        }
    }
}

#endif



