
#ifndef __CUSTOMERBLEED__
#define __CUSTOMERBLEED__

/******************************************************************************
*   Copyright 2003.  The U.S. Government, as Represented by the Administrator
*     of the National Aeronautics and Space Administration (NASA).
*   Copyright 2009.  The Ohio Aerospace Institute, on behalf of the NPSS(TM)
*     Consortium.  All rights reserved.  Includes content licensed from the 
*     U.S. Government, National Aeronautics and Space Administration under 
*     United States Copyright Registration Numbers  V3503D364 and V3482D344.
*******************************************************************************/
//
// For further information contact support@wolverine-ventures.com
//


#include <InterpIncludes.ncp>

class CustomerBleed extends Element {

//------------------------------------------------------------
//     ******* DOCUMENTATION *******
//------------------------------------------------------------

  title ="";

  description = isA() + " will calculate Environmental Control System extractions.
";

  usageNotes =" ";

  background = "";

//------------------------------------------------------------
//  SETUP VARIABLES
//------------------------------------------------------------

  real W_in {
    value = 0.0; units = "lbm/sec"; IOstatus = "input";
    description = "Input for customer bleed mass flow demand for customer interface";
  }
  real WqWref_in {
    value = 0.0; units = "none"; IOstatus = "input";
    description = "Input for customer bleed mass flow ratio (W_dmd/Wref)";
  }
  real W_dmd {
    value = 0.0; units = "lbm/sec"; IOstatus = "output";
    description = "Customer bleed mass flow demand for customer interface";
  }
  real ht {
    value = 0.0; units = "Btu/lbm"; IOstatus = "output";
    description = "Total specific enthalpy of bleed flow";
  }
  real Pt {
    value = 0.0; units = "psia"; IOstatus = "output";
    description = "Total pressure of bleed flow";
  }
  real Tt {
    value = 0.0; units = "R"; IOstatus = "output";
    description = "Total temperature of bleed flow";
  }
  real W {
    value = 0.0; units = "lbm/sec"; IOstatus = "output";
    description = "Customer bleed mass flow";
  }
  real WqWref {
    value = 0.0; units = "none"; IOstatus = "input";
    description = "Customer bleed mass flow ratio (W/Wref)";
  }
  real Wref {
    value = 0.0; units = "lbm/sec"; IOstatus = "output";
    description = "Reference mass flow";
  }
  string WrefName {
    value = ""; units = "none"; IOstatus = "input";
    description = "Name of bleed reference object";
    ptrType="VariableBase";
  }
  string portRef{
    value = ""; IOstatus = "input"; units = "none";
    description = "Name of fluid port to use for reference";
    ptrType="FluidOutputPort";
  }

  //------------------------------------------------------------
  // DEFINE OPTION VARIABLES
  //------------------------------------------------------------
  Option switchW {
    allowedValues = { "OFF=0", "INPUT=1", "FRAC=2", "INPUT+FRAC=12", "CALCULATE=99", "CUSTOM=100" }
    IOstatus = "input";
    trigger=FALSE;
    description="switchW allows selection of customer bleed calculation method";
    iDescription=
"
 |-----------------|-----------------|----------------------------------------|
 | switchW         | Input Parameter |               Description              |
 |-----------------|-----------------|----------------------------------------|
 | OFF           0 | none            | Bleed is not flowing                   |
 |-----------------|-----------------|----------------------------------------|
 | INPUT         1 | W_in            | Bleed flow rate is input               |
 |-----------------|-----------------|----------------------------------------|
 | FRAC          2 | WqWref_in       | Bleed flow fraction is input           |
 |-----------------|-----------------|----------------------------------------|
 | INPUT+FRAC   12 | W_in, WqWref_in | Bleed flow rate and fraction are input |
 |-----------------|-----------------|----------------------------------------|
 | CALCULATE    99 | TB_WCust        | Supplier-provided calculation          |
 |-----------------|-----------------|----------------------------------------|
 | CUSTOM      100 | S_customW       | Customer hook function                 |
 |-----------------|-----------------|----------------------------------------|
";
  }


//------------------------------------------------------------
//  SOCKETS
//------------------------------------------------------------

  Socket S_customW {
    allowedValues = { "W_dmd" }
    description = "Customer bleed mass flow demand socket";
    socketType = "CUSTOM_HOOK";
  }
  
//------------------------------------------------------------
//  PERFORM ENGINEERING CALCULATIONS
//------------------------------------------------------------

  void calculate() {

    // calculate bleed flow demand

    if(      switchW == "OFF"        ) { W_dmd = 0.0; }
    else if( switchW == "INPUT"      ) { W_dmd = W_in; }
    else if( switchW == "FRAC"       ) { W_dmd =        WqWref_in * Wref; }
    else if( switchW == "INPUT+FRAC" ) { W_dmd = W_in + WqWref_in * Wref; }
    else if( switchW == "CALCULATE"  ) { W_dmd = flowSchedule(); }
    else if( switchW == "CUSTOM" ) {
      W_dmd = 0.0;
      if( !S_customW.isEmpty() ) { S_customW.execute(); } //returns W_dmd
    }

  }

  real flowSchedule() {
    real _W;
    _W = 0.0;
    if( !TB_WCust.isEmpty() ) { _W = evalTB_WCust( ); }
    return _W;
  }

}
#endif