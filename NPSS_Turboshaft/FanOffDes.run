//------------------------------------------------------------------------
//                                                                       |
//   File Name:     FanOffDes.run                                        |
//   Date(s):       January 18th, 2021                                   |
//   Author:        Prakash Prashanth                                    |
//                                                                       |
//   Description:   Ducted fan for integration with TAESOPT  OffDes      |
//                                                                       |
//------------------------------------------------------------------------

MODELNAME = "Ducted Fan";
AUTHOR    = "Prashanth";
#include <System.fnc>

setThermoPackage("GasTbl");
#include "DuctedFan.mdl"
#include "printDetails.fnc"
#include "utils.fnc"
#include "save_solver.fnc"
// Define true and false to make it easier to use from Julia

int true  = 1;
int false = 0;
int first;
real ShP_input;
//====================
//Read input file
//====================
#include "FanInputs.inp"
restart("offDes_fan_start.restart");
// real ShP_input = -1971.3672778948226;
// first=1;

#include "FanScalars.inp"
DuctedFan.setOption("switchDes","OFFDESIGN");


//====================
//Auto solver setup
//====================
// solver.clear();
autoSolverSetup();
// printSolverDetails();
//====================
// Solver setup:
//====================
solver.maxIterations = 200;
solver.maxJacobians  = 200;
// solver.debugLevel = "ITERATION_DETAILS";
// solver.diagnosticFile = "solver.diag";
// solver.solutionMode = "ONE_PASS";
// solver.defaultDxLimit = 0.001;
// solver.defaultPerturbation = 0.0001;
// solver.convergenceLimit = 0.8;
// solver.defaultTolerance = 1e-10;

// //====================
// //Run engine model
// //====================

if(first){
    restart("offDes_fan_start.restart");
}
else {
    restart("offDes_fan_prev.restart");
}

run();
// MsgBlock1( "Number of Iterations to solve = "+toStr(solver.iterationCounter));
if(solver.converged == 1){
    if(first){
        SaveIndepVals("solver", "offDes_fan_start.restart");
    }
    else{
        SaveIndepVals("solver", "offDes_fan_prev.restart");
    }
}
// else{
//     cout<<"ERROR! Did not converge"<<endl;
// }
// cout<< " STARTED FAN"<<endl;
//====================
// Outputs
//====================
OutFileStream output {
    filename = "Fan.output"; 
}

parseFile("write_fan_offdes.int");


// Variables to read inputs from cin
string t ;
int i ;
real M0, alt;
// // Loop while 999 is not sent to cin
// while(i!=999)
// {
//     cin>> i;
//     if(i==111){
//         t = cin.getline();
//         i = 222;
//         output.reopen();
//         parseString(t);
//         DuctedFan.Amb.alt_in = alt;
//         DuctedFan.Amb.MN_in  = M0;
//         // DuctedFan.setOption("switchDes","OFFDESIGN");
//         // #include "FanScalars.inp"
//         // autoSolverSetup();
//         // if(first){
//             restart("offDes_fan_start.restart");
//         // }
//         // else{
//         //     restart("offDes_fan_prev.restart");
//         // }
        
//         run();
//         if(solver.converged){
//             SaveIndepVals("solver", "offDes_fan_prev.restart");
//         }
//         else{ break; quit();}
//         parseFile("write_fan_offdes.int");
//         // sys.sleep(1);
        
//     }
// }
// // cout<<"Finished"<<endl;