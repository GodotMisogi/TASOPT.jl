//------------------------------------------------------------------------
//                                                                       |
//   File Name:     Tshaft.run                                           |
//   Date(s):       January 2nd, 2021                                    |
//   Author:        Prakash Prashanth                                    |
//                                                                       |
//   Description:   Turboshaft engine for integration with TAESOPT       |
//                                                                       |
//------------------------------------------------------------------------
MODELNAME = "Turboshaft engine";
AUTHOR    = "Prashanth";

setThermoPackage("GasTbl");
#include "TShaft.mdl"
#include "printDetails.fnc"
#include "utils.fnc"
#include "save_solver.fnc"

Eng.setOption("switchDes","DESIGN");
Eng.PCEC.setOption("switchMode", "ON");

//====================
//Read input file
//====================
#include "EngineInputs.inp"

//====================
//Auto solver setup
//====================
solver.clear();
autoSolverSetup();

//====================
//Custom solver setup
//====================
#include "SolverVariables.int"
#include "CustomSolverSetup.int"

DESIGN_TARGET_SHP.eq_rhs  = toStr(SHP_dmd);
DESIGN_TARGET_Tt41.eq_rhs = toStr(Tt41);

// printSolverDetails();

//====================
// Solver setup:
//====================
solver.maxIterations = 200;
solver.maxJacobians  = 200;
// solver.debugLevel = "ITERATION_DETAILS";
// solver.diagnosticFile = "solver.diag";
// solver.solutionMode = "ONE_PASS";
// solver.defaultDxLimit = 0.001;
// solver.defaultPerturbation = 0.0001;
// solver.convergenceLimit = 0.8;
solver.defaultTolerance = 1e-10;

//====================
//Run engine model
//====================
restart("temp.restart");

run();

// MsgBlock1( "Number of Iterations to solve = "+toStr(solver.iterationCounter));
if(solver.converged == 1){
    SaveIndepVals("solver", "temp.restart");
}
else{
    cout<<"ERROR! Did not converge"<<endl;
}

//====================
// Outputs
//====================
OutFileStream output {
    filename = "Eng.output"; 
}

output<<"# Julia readable file of engine output.\n# Date:"+ date + " Time:" + timeOfDay<<endl<<endl;
output<<"mdot = "<<Eng.FsEng.W_in/2.205<<"\t#kg/s"<<endl;
output<<"mdotf = "<<Eng.FusEng.Wfuel/2.205<<"\t#kg/s"<<endl;
output<<"eta_thermal = "<<Eng.Perf.IdealThermalEff<<endl;
output<<"ShP = "<<Eng.ShP.HPX<<"\t#" +Eng.ShP.HPX.units<<endl;
output<<"OPR = "<<Eng.CmpH.Fl_O.Pt/Eng.CmpL.Fl_I.Pt<<endl;
output<<"BSFC = "<<Eng.Perf.BSFC<<endl;
output<<"Tt41 = "<<Eng.TrbH.F041.Tt<<"\t#" +Eng.TrbH.F041.Tt.units<<endl;
output<<"Tt3 = "<<Eng.CmpH.Fl_O.Tt <<"\t#" +Eng.CmpH.Fl_O.Tt.units<<endl;

output<<"\n# PCEC related outputs"<<endl;
output<<"deNOx = "<<Eng.PCEC.deNOx <<endl;
output<<"mcat = "<<Eng.PCEC.m_cat <<"\t# kg"<<endl;
output<<"Af = "<<Eng.PCEC.Af <<"\t#"+ Eng.PCEC.Af.units<<endl;
output<<"lcat = "<<Eng.PCEC.l <<"\t#"+ Eng.PCEC.l.units<<endl;

