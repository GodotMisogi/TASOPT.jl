//------------------------------------------------------------------------
//                                                                       |
//   File Name:     Tshaft.run                                           |
//   Date(s):       January 2nd, 2021                                    |
//   Author:        Prakash Prashanth                                    |
//                                                                       |
//   Description:   Turboshaft engine for integration with TAESOPT       |
//                                                                       |
//------------------------------------------------------------------------
MODELNAME = "Turboshaft engine";
AUTHOR    = "Prashanth";

setThermoPackage("GasTbl");
#include "TShaft.mdl"
#include "printDetails.fnc"
#include "utils.fnc"
#include "save_solver.fnc"

//====================
//Read input file
//====================
#include "OffDesInputs.inp"
restart("offdesTO.restart");
// restart("offdes.restart");
Eng.PCEC.setOption("switchMode","ON");
#include "Tshaft_design.int"
Eng.setOption("switchDes", "OFFDESIGN");



//====================
//Auto solver setup
//====================
// solver.clear();
// All setup in variable changed method in TShaft.mdl
autoSolverSetup();
// printSolverConditions();
OutFileStream diag {
    filename = "Offdes_solver.diag"; append = TRUE;
}

//====================
// Solver setup:
//====================
solver.maxIterations = 200;
solver.maxJacobians  = 200;
// solver.debugLevel = "ITERATION_DETAILS";
// solver.diagnosticFile = "solver.diag";
// solver.solutionMode = "ONE_PASS";
// solver.defaultDxLimit = 0.001;
// solver.defaultPerturbation = 0.0001;
// solver.convergenceLimit = 0.8;
// solver.defaultTolerance = 1e-8;

//====================
//Run engine model
//====================
if( first == 1){
    restart("offdes1.restart");
}
if(first == 0){
    restart("offdes_prev_converged.restart");
}
run();
// MsgBlock1( "Number of Iterations to solve = "+toStr(solver.iterationCounter));
if(solver.converged != 1){
    cout<<"ERROR! Did not converge"<<endl;
}
else{
    if (first == 1){
        SaveIndepVals("solver", "offdes1.restart");
    }
    if (first == 0){
        SaveIndepVals("solver", "offdes_prev_converged.restart");
    }
}

diag<<first<<"> Tt41 demand = "<<Tt41<<"\t iter to converge = "<<solver.iterationCounter<<endl;

// for(Eng.Amb.alt_in = 30000; Eng.Amb.alt_in >=0; Eng.Amb.alt_in-=1000){
//     if (Eng.Amb.MN_in >=0.25){
//     Eng.Amb.MN_in -= 0.01;}
//     cout<<Eng.Amb.MN_in<<endl;
//     cout<<Eng.Amb.alt_in<<endl;
//     run();
//     cout<<"Power =";
//     cout<<Eng.ShP.HPX<<endl;
// }
// SaveIndepVals("solver", "offdesTO.restart");

//====================
// Outputs
//====================

OutFileStream output {
    filename = "Eng.output"; //autoFlush = FALSE;
}
parseFile("write_offDes_output.int");


string t ;
int i ;
real M0, alt;

InFileStream input{
    filename = "cin";
}

while(i!=999)
{
    cin>> i;
    // input >> M0;
    // input >> alt;
    // input >> Tt41;
    if(i==111){
        t = cin.getline();
        i = 222;
        output.reopen();
        parseString(t);
        Eng.Amb.alt_in = alt;
        Eng.Amb.MN_in  = M0;
        run();
        parseFile("write_offDes_output.int");
    }
}
cout<<"Finished"<<endl;
