//------------------------------------------------------------------------
//                                                                       |
//   File Name:     Tshaft.run                                           |
//   Date(s):       January 2nd, 2021                                    |
//   Author:        Prakash Prashanth                                    |
//                                                                       |
//   Description:   Turboshaft engine for integration with TAESOPT       |
//                                                                       |
//------------------------------------------------------------------------
MODELNAME = "Turboshaft engine";
AUTHOR    = "Prashanth";

setThermoPackage("GasTbl");
#include "TShaft.mdl"
#include "printDetails.fnc"
#include "utils.fnc"
#include "save_solver.fnc"

//====================
//Read input file
//====================
#include "OffDesInputs.inp"
restart("offdesTO.restart");
// restart("offdes.restart");
Eng.PCEC.setOption("switchMode","ON");
#include "Tshaft_design.int"
Eng.setOption("switchDes", "OFFDESIGN");

int Ldiag = FALSE;
// Define true and false to make it easier to use from Julia
int true  = 1;
int false = 0;


//====================
//Auto solver setup
//====================
// All setup in variable changed method in TShaft.mdl
autoSolverSetup();
// printSolverConditions();
OutFileStream diag {
    filename = "Offdes_solver.diag"; append = TRUE;
}

//====================
// Solver setup:
//====================
solver.maxIterations = 200;
solver.maxJacobians  = 200;
// solver.debugLevel = "ITERATION_DETAILS";
// solver.diagnosticFile = "solver.diag";
// solver.solutionMode = "ONE_PASS";
// solver.defaultDxLimit = 0.001;
// solver.defaultPerturbation = 0.0001;
// solver.convergenceLimit = 0.8;
// solver.defaultTolerance = 1e-8;

//====================
//Run engine model
//====================
if( first == 1){
    restart("offdesTO.restart");// restart("offdes1.restart");
}
if(first == 0){
    restart("offdes_prev_converged.restart");
}
run();
// MsgBlock1( "Number of Iterations to solve = "+toStr(solver.iterationCounter));
if(solver.converged != 1){
    cout<<"ERROR! Did not converge"<<endl;
}
else{
    if (first == 1){
        SaveIndepVals("solver", "offdes1.restart");
    }
    if (first == 0){
        SaveIndepVals("solver", "offdes_prev_converged.restart");
    }
}
if(Ldiag) {
    diag<<first<<"> Tt41 demand = "<<Tt41<<"\t iter to converge = "<<solver.iterationCounter<<endl;
}

//====================
// Outputs
//====================

OutFileStream output {
    filename = "Eng.output"; //autoFlush = FALSE;
}
parseFile("write_offDes_output.int");

// Variables to read inputs from cin
string t ;
int i ;
real M0, alt;
// Loop while 999 is not sent to cin
while(i!=999)
{
    cin>> i;
    // input >> M0;
    // input >> alt;
    // input >> Tt41;
    if(i==111){
        t = cin.getline();
        i = 222;
        output.reopen();
        parseString(t);
        Eng.Amb.alt_in = alt;
        Eng.Amb.MN_in  = M0;
        if(first){
            restart("offdesTO.restart");
        }
        run();
        parseFile("write_offDes_output.int");
    }
}
cout<<"Finished"<<endl;
